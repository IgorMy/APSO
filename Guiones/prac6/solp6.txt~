SISTEMAS OPERATIVOS             PRACTICA 6



        ALUMNO: Ihar Myshkevich


NOTAS:

1) NO NOS PODEMOS MOVER DE DIRECTORIO MIENTRAS NO SE ESPECIFIQUE
2) TRABAJAREMOS COMO EN LA PRACTICA 1. COPIAMOS ESTE FICHERO EN EL
   DIRECTORIO "prac6" CON EL NOMBRE "solp6.txt". EN ESE FICHERO IREMOS
   COLOCANDO LA SOLUCION A CADA PREGUNTA
3) HAY QUE INTENTAR SOLUCIONAR CADA PREGUNTA DE LA FORMA MAS EFICIENTE
4) UTILIZA VARIABLES SIEMPRE QUE SEA POSIBLE


1. Crea con un solo comando el siguiente arbol de directorios a partir de
tu directorio personal

                                prac6
                                  |
                                  |
        -------------------------------------------
        |                 |                       |
      prac6            fuentes                  guiones
                          |
                          |
                  ------------------
                  |                |
                tmp1             tmp2


	mkdir -p prac6/prac6 prac6/fuentes/tmp1 prac6/fuentes/tmp2 prac6/guiones

2. Incluye dentro del fichero ".profile" la variable "GUION" con la
ruta al directorio "guiones" creado anteriormente. Haz que tome efecto
esta varible. Copia todos los ficheros que a partir de tu directorio 
personal terminen en ".txt" en el directorio "tmp1"

	joe .profile
	< aÃ±adir GUION="$HOME/prac6/guiones" >
	. ./.profile
	cp -t $HOME/prac6/fuentes/tmp1 $(find ~ -name '*.txt')
 
3. Muevete al directorio "guiones". Crea un guion en el directorio "guiones"
llamado "tratafichero". Este guion debe recoger un unico parametro. Si el
parametro es un fichero ordinario debe visualizar su contenido con el
comando "more". Si se trata de un directorio, debemos ver el contenido del
mismo con el comando "ls -la". Si no es ni un fichero ni un directorio debe
hacerse un "echo" del parametro. (Se necesita usar el comando test y la
estructura "if"). 

	cd prac6/guiones/
	joe tratafichero
	<Escribir 
	  if test -f $1; then
 	   more $1
	  elif test -d $1;then
 	   ls $1 -la
	  else
  	   echo $1
 	  fi
	>
	chmod u+x tratafichero

4. Muevete al directorio "prac6" que esta dentro de "prac6". Ejecuta desde aqui el 
guion anterior dos veces. La primera vez le pasamos como parametro 
"$HOME/prac2/f1.txt". La segunda le pasamos como parametro la variable "GUION" 
creada en el apartado 2.
 
	cd ../prac6
	$GUION/tratafichero $HOME/prac2/f1.txt
	$GUION/tratafichero $GUION

5. Muevete al directorio "guiones". Crea un guion llamado "fpfinal" que haga
siguiente:

- Si no se pasan 3 parametros visualiza un mensaje que dice: "Se necesitan
al menos 3 parametros"

- Si se pasan 3 parametros se comprueba que el primero y el tercero son
directorios. Si no lo son, visualiza el mensaje: "El primer y tercer
parametro han de ser directorios"

- Copia todos los nombres (solo el nombre, no la ruta) de enlaces simbolicos 
(ficheros soft link) encontrados a partir del primer directorio especificado, 
cuyo nombre coincida con el segundo parametro, en el directorio especificado 
en tercer lugar con el nombre "enlaces.txt". Los errores no deben salir por 
pantalla.


Ejecuta este guion con los parametros siguientes:

- primer parametro: "/home" 
- segundo parametro: ficheros que empiecen por una letra mayuscula
- tercer parametro: directorio "fuentes" creado en el apartado 1


	cd $GUION
       <if [ $# -lt 3 ] ; then
        	echo Se necesitan al menos 3 parametros
	elif [ -d $1 ] && [ -d $3 ]; then
        	find $1 -name "$2" -type l -printf "%f\n"  2>/dev/null >$3/enlaces.txt 
	else
        	echo El primer y tercer parametro han de ser directorios
	fi>
	chmod u+x fpfinal
	fpfinal /home "[A-Z]*" /home/ihar.myshkevich134/prac6/fuentes

6. Crea un guion llamado "mtam" que muestre, para cada fichero encontrado a
partir del directorio pasado como primer parametro cuyo nombre coincide con
el segundo parametro, su tamaño. Comprueba que el numero de parametros es el
correcto y que el primero es un directorio. Si hay algun error debe
comunicarse por pantalla. (Usa el for en el guion)


Ejecutalo con los parametros siguientes:

- Primer parametro: directorio "fuentes" creado anteriormente
- Segundo parametro: ficheros que empiecen por "s" y tengan un punto en su
                     nombre  

	joe mtam
	<if [ $# -lt 2 ];then
        	echo Se deben pasar dos parametros
	elif [ ! -d $1 ] ; then
        	echo El primer parametro tiene que se run directorio
	else
        	for a in $(find $1 -name "$2" -type f);do
           		wc -c $a
        	done
	fi>
	chmod u+x mtam
	mtam ../fuentes "s*.*"	

7. Crea un guion llamado "anida", al que se le pasara un parametro y debera 
hacer lo siguiente:

        * Pedira que se introduzca un numero por el teclado
        * Creara tantos directorios anidados, con el nombre que se ha pasado
          como primer parametro, como indique el numero leido, a partir del
	  directorio en el que nos encontramos

Ejemplo: Se ejecuta "anida p1"  y el numero que se lee es 3. Esto creara
un directorio p1, que tiene dentro un directorio p1, que a su vez tiene 
dentro un directorio p1, a partir del directorio en el que estamos.


NOTA: Se monta un bucle 'while', que itera tantas veces como indique el
contador, y dentro se va creando la ruta de los subdirectorios sobre una 
variable, que es la usada para crear los subdirectorios.

Muevete al directorio "tmp2". Ejecuta desde aqui el guion anterior de la
siguiente forma: "anida p6" y se teclea el numero 2 por teclado cuando lo 
solicite.

	joe anida
	<if [ $# -lt 1 ];then
        	echo Se necesita pasar al menos un parametro
	else
        	read n
        	while [ $n -gt 0 ];do
          		mkdir $1
          		cd $1
          		n=$(($n -1))
        	done
	fi>
	chmod u+x anida
	cd ../fuentes/tmp2/
	../../guiones/anida p6
	<2>


8. Muevete al directorio "guiones". Crea un guion llamado "opcion" que lea
una palabra del teclado. Si la palabra empieza por un numero almacena la
palabra al final de un fichero llamado "numero", en un fichero llamado "vocal"
si empieza por vocal y en un fichero llamado "otro" para cualquier otro
caso. Usa el "case" para decidir a que fichero va la palabra. Debe estar
haciendo siempre lo mismo hasta que se pulse un punto, pero no debe parar si
se introduce un punto seguido de cualquier otro conjunto de caracteres. 

	cd ../../guiones/
	joe opcion
	<n="hola"
	until [ $n == "." ]; do
        	read n
        	case $n in
                	.) ;;
               		[1-9]*) echo $n >>numero;;
                	[aAeEiIoOuU]*) echo $n >>vocal;;
                	*) echo $n >>otro;;
        	esac
	done>
	chmod u+x opcion

9. Modifica los permisos de los directorios "tmp1" y "tmp2" para que el 
propietario tenga todos los permisos menos el de ejecucion, el grupo solo el 
de lectura y los otros solo el de ejecucion.

	chmod 641 ../fuentes/tmp1 ../fuentes/tmp2

10. Consulta el numero de procesos total que tienes activos en este preciso 
momento (contando los de todas las ventanas abiertas). (Se usa ps y wc)

	ps -a | wc -l


NO SE OLVIDE PONER EL NOMBRE

